// Code generated by MockGen. DO NOT EDIT.
// Source: ./resolving_strategy.go

// Package testdata is a generated GoMock package.
package testdata

import (
	reflect "reflect"

	core "github.com/d34dl0ck/coupler/internal/core"
	gomock "github.com/golang/mock/gomock"
)

// MockResolvingStrategy is a mock of ResolvingStrategy interface.
type MockResolvingStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockResolvingStrategyMockRecorder
}

// MockResolvingStrategyMockRecorder is the mock recorder for MockResolvingStrategy.
type MockResolvingStrategyMockRecorder struct {
	mock *MockResolvingStrategy
}

// NewMockResolvingStrategy creates a new mock instance.
func NewMockResolvingStrategy(ctrl *gomock.Controller) *MockResolvingStrategy {
	mock := &MockResolvingStrategy{ctrl: ctrl}
	mock.recorder = &MockResolvingStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResolvingStrategy) EXPECT() *MockResolvingStrategyMockRecorder {
	return m.recorder
}

// ProvideDefaultKey mocks base method.
func (m *MockResolvingStrategy) ProvideDefaultKey() core.DependencyKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProvideDefaultKey")
	ret0, _ := ret[0].(core.DependencyKey)
	return ret0
}

// ProvideDefaultKey indicates an expected call of ProvideDefaultKey.
func (mr *MockResolvingStrategyMockRecorder) ProvideDefaultKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProvideDefaultKey", reflect.TypeOf((*MockResolvingStrategy)(nil).ProvideDefaultKey))
}

// Resolve mocks base method.
func (m *MockResolvingStrategy) Resolve(r core.Resolver) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve", r)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve.
func (mr *MockResolvingStrategyMockRecorder) Resolve(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockResolvingStrategy)(nil).Resolve), r)
}
